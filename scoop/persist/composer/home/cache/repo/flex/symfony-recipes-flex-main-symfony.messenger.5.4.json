{"body":{"manifests":{"symfony\/messenger":{"manifest":{"copy-from-recipe":{"config\/":"%CONFIG_DIR%\/"},"env":{"#1":"Choose one of the transports below","#2":"MESSENGER_TRANSPORT_DSN=amqp:\/\/guest:guest@localhost:5672\/%2f\/messages","#3":"MESSENGER_TRANSPORT_DSN=redis:\/\/localhost:6379\/messages","MESSENGER_TRANSPORT_DSN":"doctrine:\/\/default?auto_setup=0"},"conflict":{"symfony\/framework-bundle":"<4.3"},"post-install-output":["  * You're ready to use the Messenger component. You can define your own message buses","    or start using the default one right now by injecting the <info>message_bus<\/info> service","    or type-hinting <info>Symfony\\Component\\Messenger\\MessageBusInterface<\/info> in your code.","","  * To send messages to a transport and handle them asynchronously:","","    1. Uncomment the <info>MESSENGER_TRANSPORT_DSN<\/> env var in <comment>.env<\/>","       and <info>framework.messenger.transports.async<\/> in <comment>config\/packages\/messenger.yaml<\/>;","    2. Route your message classes to the async transport in <comment>config\/packages\/messenger.yaml<\/>.","","  * <fg=blue>Read<\/> the documentation at <comment>https:\/\/symfony.com\/doc\/current\/messenger.html<\/>"]},"files":{"config\/packages\/messenger.yaml":{"contents":["framework:","    messenger:","        # reset services after consuming messages","        reset_on_message: true","","        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.","        # failure_transport: failed","","        transports:","            # https:\/\/symfony.com\/doc\/current\/messenger.html#transport-configuration","            # async: '%env(MESSENGER_TRANSPORT_DSN)%'","            # failed: 'doctrine:\/\/default?queue_name=failed'","            # sync: 'sync:\/\/'","","        routing:","            # Route your messages to the transports","            # 'App\\Message\\YourMessage': async",""],"executable":false}},"ref":"8bd5f27013fb1d7217191c548e340f0bdb11912c"}}},"headers":{"content-length":["982"],"source-age":["0"],"expires":["Tue, 11 Jul 2023 14:05:54 GMT"],"x-fastly-request-id":["2887581cf6d623eb2ed11561b67c84eac2330f13"],"cross-origin-resource-policy":["cross-origin"],"access-control-allow-origin":["*"],"vary":["Authorization,Accept-Encoding,Origin"],"x-timer":["S1689084054.199334,VS0,VE219"],"x-cache-hits":["0"],"x-cache":["MISS"],"x-served-by":["cache-lis1490048-LIS"],"via":["1.1 varnish"],"date":["Tue, 11 Jul 2023 14:00:54 GMT"],"accept-ranges":["bytes"],"content-encoding":["gzip"],"x-github-request-id":["9B08:50F7:795C53:7E815A:64AD6094"],"x-xss-protection":["1; mode=block"],"x-frame-options":["deny"],"x-content-type-options":["nosniff"],"strict-transport-security":["max-age=31536000"],"etag":["W\/\"5787cb1bccef0789d109b471900246c09782128582bf17f29f1ebd83ee3f53b0\""],"content-type":["text\/plain; charset=utf-8"],"content-security-policy":["default-src 'none'; style-src 'unsafe-inline'; sandbox"],"cache-control":["max-age=300"]}}